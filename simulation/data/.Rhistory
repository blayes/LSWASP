temp_Vlmat[[ii]] <- tcrossprod(temp_lmat[[ii]]-mulmat)
}
Vlmat[[i]] <- Reduce("+", temp_Vlmat)/(nsample-1)
}
temp_Varlmat <- vector("list", npart)
for(i in 1: npart){
temp_Varlmat[[i]] <- sqrtm(Vlmat[[i]] %*% Vlmat[[1]]) %*% sqrtm(solve(Vlmat[[1]]))
}
Varlmat <- Reduce("+", temp_Varlmat)/npart
Varlmat <- tcrossprod(Varlmat)
list(postlmatMean = mulmat,
postlmatVar = Varlmat)
}
comblmat <- function(res, npart, niter, nburn, nthin){
Mlmat <- list()
Vlmat <- list()
nsample <- (niter-nburn)/nthin
for(i in 1:npart){
res_temp <-res[[i]]
temp_lmat <- sapply(res_temp$lmat, function(x) x[1])
temp_lmat <- lapply(temp_lmat, function(x) vech(x))
mlmat <- Reduce("+", temp_lmat)/nsample
Mlmat[[i]] <- mlmat
mulmat <- Reduce("+", Mlmat)/npart
temp_Vlmat <- vector("list", nsample)
for(ii in 1:nsample){
#temp_Vlmat[[ii]] <- tcrossprod(temp_lmat[[ii]]-mlmat)
temp_Vlmat[[ii]] <- tcrossprod(temp_lmat[[ii]]-mulmat)
}
Vlmat[[i]] <- Reduce("+", temp_Vlmat)/(nsample-1)
}
temp_Varlmat <- vector("list", npart)
for(i in 1: npart){
temp_Varlmat[[i]] <- sqrtm(Vlmat[[i]] %*% Vlmat[[1]]) %*% sqrtm(solve(Vlmat[[1]]))
}
Varlmat <- Reduce("+", temp_Varlmat)/npart
Varlmat <- tcrossprod(Varlmat)
list(postlmatMean = mulmat,
postlmatVar = Varlmat)
}
comblmats <- comblmat(res, npart0, niter, nburn, nthin)
set.seed(1234)
lmatsList <- vector("list",nsample)
for(ii in 1:nsample){
lmatsList[[ii]] <- comblmats$postlmatMean + drop(crossprod(chol(comblmats$postlmatVar),rnorm(length(comblmats$postlmatMean))))
}
lmatsflList <- sapply(res_full$lmat, function(x) x[1])
lmatsflList <- lapply(lmatsflList, function(x) vech(x))
plot(density(sapply(lmatsflList, function(x) x[1])), col = "blue")
lines(density(sapply(lmatsList, function(x) x[1])), col="red" )
lmatsList <- vector("list",nsample)
for(ii in 1:nsample){
lmatsList[[ii]] <- comblmats$postlmatMean + drop(crossprod(chol(comblmats$postlmatVar),rnorm(length(comblmats$postlmatMean))))
}
plot(density(sapply(lmatsflList, function(x) x[2])), col = "blue")
lines(density(sapply(lmatsList, function(x) x[2])), col="red" )
lmatsflList <- sapply(res_full$lmat, function(x) x[1])
lmatsflList <- lapply(lmatsflList, function(x) vech(x))
comblmat <- function(res, npart, niter, nburn, nthin){
Mlmat <- list()
Vlmat <- list()
nsample <- (niter-nburn)/nthin
for(i in 1:npart){
res_temp <-res[[i]]
temp_lmat <- sapply(res_temp$lmat, function(x) x[1])
temp_lmat <- lapply(temp_lmat, function(x) vech(x))
mlmat <- Reduce("+", temp_lmat)/nsample
Mlmat[[i]] <- mlmat
}
mulmat <- Reduce("+", Mlmat)/npart
for(i in 1:npart){
res_temp <-res[[i]]
temp_lmat <- sapply(res_temp$lmat, function(x) x[1])
temp_lmat <- lapply(temp_lmat, function(x) vech(x))
temp_Vlmat <- vector("list", nsample)
for(ii in 1:nsample){
#temp_Vlmat[[ii]] <- tcrossprod(temp_lmat[[ii]]-mlmat)
temp_Vlmat[[ii]] <- tcrossprod(temp_lmat[[ii]]-mulmat)
}
Vlmat[[i]] <- Reduce("+", temp_Vlmat)/(nsample-1)
}
temp_Varlmat <- vector("list", npart)
for(i in 1: npart){
temp_Varlmat[[i]] <- sqrtm(Vlmat[[i]] %*% Vlmat[[1]]) %*% sqrtm(solve(Vlmat[[1]]))
}
Varlmat <- Reduce("+", temp_Varlmat)/npart
Varlmat <- tcrossprod(Varlmat)
list(postlmatMean = mulmat,
postlmatVar = Varlmat)
}
comblmats <- comblmat(res, npart0, niter, nburn, nthin)
set.seed(1234)
lmatsList <- vector("list",nsample)
for(ii in 1:nsample){
lmatsList[[ii]] <- comblmats$postlmatMean + drop(crossprod(chol(comblmats$postlmatVar),rnorm(length(comblmats$postlmatMean))))
}
lmatsflList <- sapply(res_full$lmat, function(x) x[1])
lmatsflList <- lapply(lmatsflList, function(x) vech(x))
plot(density(sapply(lmatsflList, function(x) x[1])), col = "blue")
lines(density(sapply(lmatsList, function(x) x[1])), col="red" )
plot(density(sapply(lmatsflList, function(x) x[2])), col = "blue")
lines(density(sapply(lmatsList, function(x) x[2])), col="red" )
library("expm")
library("MCMCpack")
combFixEff <- function(res, npart, niter, nburn, nthin){
Mbeta <- list()
Vbeta <- list()
nsample <- (niter-nburn)/nthin
for(i in 1:npart){
res_temp <-res[[i]]
Mbeta[[i]] <- res_temp$beta[[nsample]][[2]]
Vbeta[[i]] <- res_temp$beta[[nsample]][[3]]
}
muBeta <- Reduce("+", Mbeta)/npart
temp_VarBeta <- vector("list", npart)
for(i in 1: npart){
temp_VarBeta[[i]] <- sqrtm(Vbeta[[i]] %*% Vbeta[[1]]) %*% sqrtm(solve(Vbeta[[1]]))
}
VarBeta <- Reduce("+", temp_VarBeta)/npart
VarBeta <- tcrossprod(VarBeta)
list(postFixMean = muBeta,
postFixVar = VarBeta)
}
comblmat <- function(res, npart, niter, nburn, nthin){
Mlmat <- list()
Vlmat <- list()
nsample <- (niter-nburn)/nthin
for(i in 1:npart){
res_temp <-res[[i]]
Mlmat[[i]] <- res_temp$lmat[[nsample]][[2]]
Vlmat[[i]] <- res_temp$lmat[[nsample]][[3]]
}
mulmat <- Reduce("+", Mlmat)/npart
temp_Varlmat <- vector("list", npart)
for(i in 1: npart){
temp_Varlmat[[i]] <- sqrtm(Vlmat[[i]] %*% Vlmat[[1]]) %*% sqrtm(solve(Vlmat[[1]]))
}
Varlmat <- Reduce("+", temp_Varlmat)/npart
Varlmat <- tcrossprod(Varlmat)
list(postlmatMean = mulmat,
postlmatVar = Varlmat)
}
combErrVar <- function(res, npart, niter, nburn, nthin){
}
comberrs <- combErrVar(res, npart0, niter, nburn, nthin)
niter = 10000
nburn = 5000
nthin = 5
npart0 = 4
res <- list(res1, res2, res3, res4)
combfixs_3 <- combFixEff(res, npart0, niter, nburn, nthin)
comblmats_3 <- comblmat(res, npart0, niter, nburn, nthin)
set.seed(1234)
nsample = (niter-nburn)/nthin
fixsList <- vector("list",nsample)
for(ii in 1:nsample){
fixsList[[ii]] <- combfixs$postFixMean + drop(crossprod(chol(combfixs$postFixVar),rnorm(length(combfixs$postFixMean))))
}
combfixs <- combFixEff(res, npart0, niter, nburn, nthin)
set.seed(1234)
nsample = (niter-nburn)/nthin
fixsList <- vector("list",nsample)
for(ii in 1:nsample){
fixsList[[ii]] <- combfixs$postFixMean + drop(crossprod(chol(combfixs$postFixVar),rnorm(length(combfixs$postFixMean))))
}
fixsflList <- sapply(res_full$beta, function(x) x[1])
plot(density(sapply(fixsList, function(x) x[1])), col="red" )
lines(density(sapply(fixsflList, function(x) x[1])), col = "blue")
comblmats <- comblmat(res, npart0, niter, nburn, nthin)
set.seed(1234)
lmatsList <- vector("list",nsample)
for(ii in 1:nsample){
lmatsList[[ii]] <- comblmats_3$postlmatMean + drop(crossprod(chol(comblmats_3$postlmatVar),rnorm(length(comblmats$postlmatMean))))
}
lmatsflList <- sapply(res_full$lmat, function(x) x[1])
lmatsflList <- lapply(lmatsflList, function(x) vech(x))
lines(density(sapply(lmatsflList, function(x) x[1])), col = "blue")
plot(density(sapply(lmatsList, function(x) x[1])), col="red" )
plot(density(sapply(lmatsList, function(x) x[1])), col="red" )
lines(density(sapply(lmatsflList, function(x) x[1])), col = "blue")
data = 1
sample.int(3, 300, replace=TRUE)
partition_matrix <- matrix(c(250,100,50,33,25,0,0,0,0,0), nrow=2)
View(partition_matrix)
partition_matrix <- matrix(c(250,100,50,33,25,0,0,0,0,0), nrow=2, byrow=TRUE)
colnames(partition_matrix) <- c("20","50","100","150","200")
rownames(partition_matrix) <- c("independent","dependent")
xtable(partition_matrix)
library(xtable)
xtable(partition_matrix)
xtable(round(partition_matrix,0))
xtable(round(partition_matrix,1))
xtable(round(partition_matrix,3))
xtable(round(partition_matrix,3))
xtable(round(partition_matrix,1))
xtable(round(partition_matrix,0))
data_full <- readRDS("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 9 - cal accuracy/raw data/init_full.rds")
split(1:nrow(data_full$x),data_full$group)
data_full$group
unique(data_full$group)
length(unique(data_full$group))
grpSplit <- split(1:nrow(data_full$x), data_full$group)
partsIdx <- sample(1:npart, length(grpSplit), replace = TRUE)
grpSplit <- split(1:nrow(data_full$x), data_full$group)
partsIdx <- sample(1:20, length(grpSplit), replace = TRUE)
partsIdx
partsIdx <- sample(1:20, length(grpSplit), replace = TRUE)
partsIdx <- sample(1:4, 20, replace = TRUE)
partsIdx
partsIdx <- sample(1:4, 20, replace = FALSE)
msd <- NULL
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 9 - cal accuracy/5.analysis_result/result")
res <- vector("list",6)
method <- c("dls","XL_dls","New_dls")
subset <- c(20,50,100, 150,200)
accur_para <- c("accur_beta", "accur_lmat", "accur_dmat", "accur_Rmat", "accur_beta_2D",
"accur_beta_3D","accur_lmat_2D","accur_lmat_3D","accur_lmat_4D","accur_lmat_5D",
"accur_dmat_2D","accur_dmat_3D","accur_dmat_4D","accur_dmat_5D")
accur_list <- vector("list", 14)
accur_list <- lapply(accur_list, function(x) x=matrix(0, nrow=length(method)) )
for(i in 1:length(subset)){
for(ii in 1:length(method)){
# data_name <- paste0("../data/res/dep_",method[ii],"_k_",i,"_accuracy.rds")
data_name <- paste0("dep_",method[ii],"_k_",subset[i],"_accuracy.rds")
res[[ii]] <- readRDS(data_name)
}
for(iii in 1:length(method)){
# data_name <- paste0("../data/res/dep_",method[ii],"_k_",i,"_accuracy.rds")
data_name <- paste0("ind_",method[iii],"_k_",subset[i],"_accuracy.rds")
res[[iii+length(method)]] <- readRDS(data_name)
}
for(jj in 1:14){
accur_mean_temp <- matrix(unlist(lapply(res, function(z) lapply(z, function(x) x$accuracy_mean[jj]))), nrow=length(method))
accur_sd_temp <- matrix(unlist(lapply(res, function(z) lapply(z, function(x) x$accuracy_sd[jj]))), nrow=length(method))
accur_list[[jj]] <- do.call(cbind,list(accur_list[[jj]], accur_mean_temp, accur_sd_temp))
colnames(accur_list[[jj]])[c((4*i-2):(4*i+1))] <- c(paste0(i,accur_para[jj],"_dep_mean"), paste0(i,accur_para[jj],"_ind_mean"),paste0(i,accur_para[jj],"_dep_sd"),paste0(i,accur_para[jj],"_ind_sd"))
}
}
for(i in 1:14){
accur_list[[i]] <- as.data.frame(accur_list[[i]])
accur_list[[i]][,1] <- NULL
}
accur_beta <- accur_list[[1]]
accur_lmat <- accur_list[[2]]
accur_dmat <- accur_list[[3]]
accur_Rmat <- accur_list[[4]]
accur_beta_2D <- accur_list[[5]]
accur_beta_3D <- accur_list[[6]]
accur_lmat_2D <- accur_list[[7]]
accur_lmat_3D <- accur_list[[8]]
accur_lmat_4D <- accur_list[[9]]
accur_lmat_5D <- accur_list[[10]]
accur_dmat_2D <- accur_list[[11]]
accur_dmat_3D <- accur_list[[12]]
accur_dmat_4D <- accur_list[[13]]
accur_dmat_5D <- accur_list[[14]]
accur_beta <- accur_list[[1]]
accur_lmat <- accur_list[[2]]
accur_dmat <- accur_list[[3]]
accur_Rmat <- accur_list[[4]]
accur_beta_2D <- accur_list[[5]]
accur_beta_3D <- accur_list[[6]]
accur_lmat_2D <- accur_list[[7]]
accur_lmat_3D <- accur_list[[8]]
accur_lmat_4D <- accur_list[[9]]
accur_lmat_5D <- accur_list[[10]]
accur_dmat_2D <- accur_list[[11]]
accur_dmat_3D <- accur_list[[12]]
accur_dmat_4D <- accur_list[[13]]
accur_dmat_5D <- accur_list[[14]]
accur_para
means_name <- c(paste0(1:5,accur_para[1],"_ind_mean"))
means_name <- c(means_name, paste0(1:5,accur_para[1],"_dep_mean"))
means_name <- means_name[c(1,6,2,7,3,8,4,9,5,10)]
sd_name <- c(paste0(1:5,accur_para[1],"_ind_sd"))
sd_name <- c(sd_name, paste0(1:5,accur_para[1],"_dep_sd"))
sd_name <- sd_name[c(1,6,2,7,3,8,4,9,5,10)]
means <- accur_beta[,means_name]
sds <- accur_bet[,sd_name]
sds <- accur_beta[,sd_name]
msd <- NULL
for(i in 1:length(method)){
msd <- rbind(msd, paste(round(means[i,],2)," (",round(sds[i,],2),")",sep=""))
}
rownames(msd) <- c("WASP_PIE", "XL","WASP_DLS")
colnames(msd) <- c(20,20,50,50,100,100,150,150,200,200)
msd <- rbind(c("independent","dependent","independent","dependent","independent","dependent","independent","dependent","independent","dependent"), msd)
xtable(format(msd), nsmall = 1)
accur_beta
accur_para
xtable(format(msd), nsmall = 1)
accur_para
means_name <- c(paste0(1:5,accur_para[5],"_ind_mean"))
means_name <- c(means_name, paste0(1:5,accur_para[5],"_dep_mean"))
means_name <- means_name[c(1,6,2,7,3,8,4,9,5,10)]
sd_name <- c(paste0(1:5,accur_para[5],"_ind_sd"))
sd_name <- c(sd_name, paste0(1:5,accur_para[5],"_dep_sd"))
sd_name <- sd_name[c(1,6,2,7,3,8,4,9,5,10)]
means <- accur_beta[,means_name]
sds <- accur_beta[,sd_name]
means <- accur_beta_2D[,means_name]
sds <- accur_beta_2D[,sd_name]
msd <- NULL
for(i in 1:length(method)){
msd <- rbind(msd, paste(round(means[i,],2)," (",round(sds[i,],2),")",sep=""))
}
rownames(msd) <- c("WASP_PIE", "XL","WASP_DLS")
colnames(msd) <- c(20,20,50,50,100,100,150,150,200,200)
msd <- rbind(c("independent","dependent","independent","dependent","independent","dependent","independent","dependent","independent","dependent"), msd)
xtable(format(msd), nsmall = 1)
accur_para
means_name <- c(paste0(1:5,accur_para[6],"_ind_mean"))
means_name <- c(means_name, paste0(1:5,accur_para[6],"_dep_mean"))
means_name <- means_name[c(1,6,2,7,3,8,4,9,5,10)]
sd_name <- c(paste0(1:5,accur_para[6],"_ind_sd"))
sd_name <- c(sd_name, paste0(1:5,accur_para[6],"_dep_sd"))
sd_name <- sd_name[c(1,6,2,7,3,8,4,9,5,10)]
means <- accur_beta_3D[,means_name]
sds <- accur_beta_3D[,sd_name]
msd <- NULL
for(i in 1:length(method)){
msd <- rbind(msd, paste(round(means[i,],2)," (",round(sds[i,],2),")",sep=""))
}
rownames(msd) <- c("WASP_PIE", "XL","WASP_DLS")
colnames(msd) <- c(20,20,50,50,100,100,150,150,200,200)
msd <- rbind(c("independent","dependent","independent","dependent","independent","dependent","independent","dependent","independent","dependent"), msd)
xtable(format(msd), nsmall = 1)
accur_beta_3D
accur_beta
res[[1]]
accur_list[[1]]$`1accur_beta_dep_mean`
accur_list[[1]]$`1accur_beta_ind_mean`
accur_list[[1]]$`1accur_beta_ind_mean`
accur_list[[1]]$`1accur_beta_dep_sd`
accur_list[[1]]$`1accur_beta_ind_sd`
accur_list[[6]]$`1accur_beta_ind_sd`
accur_list[[6]]$`1accur_beta_3D_dep_sd`
accur_list[[6]]$`1accur_beta_3D_ind_sd`
res[[1]]
rm(list=ls())
repData <- readRDS("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/data/full_data.rds")
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/data")
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/data")
rm(list=ls())
repData <- readRDS("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/data/full_data.rds")
set.seed(12345)
ngroup <- 5e4
nobs <- 1e6
nfixef <- 4
nranef <- 3
nresamp <- 1000
npart <- 20
partData <- list()
for (cc in 1:10) {
partData <- vector("list", npart)
names(partData) <- paste0("k", 1:npart)
lst <- repData[[cc]]
grpSplit <- split(1:nrow(lst$x), lst$group)
for (ll in 1:npart) {
grpIdx <- sample(1:length(grpSplit), nresamp, replace = TRUE)
idx <- unlist(grpSplit[grpIdx])
partData[[ll]]$nobs <- length(unique(grpIdx))
partData[[ll]]$x <- lst$x[idx, ]
partData[[ll]]$y <- lst$y[idx]
partData[[ll]]$z <- lst$z[idx, ]
partData[[ll]]$group <- lst$group[idx]
partData[[ll]]$idx <- idx
partData[[ll]]$nrep <- ngroup / partData[[ll]]$nobs
}
fname <- paste0("part_data_rep_", cc, "_k_", npart, "_dep.rds")
#saveRDS(partData, paste0("~/dls/data/", fname))
saveRDS(partData, paste0("1000s_", fname))
}
rm(list=ls())
#repData <- readRDS("~/dls/data/full_data.rds")
repData <- readRDS("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/data/full_data.rds")
set.seed(12345)
ngroup <- 5e4
nobs <- 1e6
nfixef <- 4
nranef <- 3
nresamp <- 1000
npart <- 50
partData <- list()
for (cc in 1:10) {
partData <- vector("list", npart)
names(partData) <- paste0("k", 1:npart)
lst <- repData[[cc]]
grpSplit <- split(1:nrow(lst$x), lst$group)
for (ll in 1:npart) {
grpIdx <- sample(1:length(grpSplit), nresamp, replace = TRUE)
idx <- unlist(grpSplit[grpIdx])
partData[[ll]]$nobs <- length(unique(grpIdx))
partData[[ll]]$x <- lst$x[idx, ]
partData[[ll]]$y <- lst$y[idx]
partData[[ll]]$z <- lst$z[idx, ]
partData[[ll]]$group <- lst$group[idx]
partData[[ll]]$idx <- idx
partData[[ll]]$nrep <- ngroup / partData[[ll]]$nobs
}
fname <- paste0("part_data_rep_", cc, "_k_", npart, "_dep.rds")
#saveRDS(partData, paste0("~/dls/data/", fname))
saveRDS(partData, paste0("1000s_", fname))
}
## npart = 100
rm(list=ls())
#repData <- readRDS("~/dls/data/full_data.rds")
repData <- readRDS("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/data/full_data.rds")
set.seed(12345)
ngroup <- 5e4
nobs <- 1e6
nfixef <- 4
nranef <- 3
nresamp <- 1000
npart <- 100
partData <- list()
for (cc in 1:10) {
partData <- vector("list", npart)
names(partData) <- paste0("k", 1:npart)
lst <- repData[[cc]]
grpSplit <- split(1:nrow(lst$x), lst$group)
for (ll in 1:npart) {
grpIdx <- sample(1:length(grpSplit), nresamp, replace = TRUE)
idx <- unlist(grpSplit[grpIdx])
partData[[ll]]$nobs <- length(unique(grpIdx))
partData[[ll]]$x <- lst$x[idx, ]
partData[[ll]]$y <- lst$y[idx]
partData[[ll]]$z <- lst$z[idx, ]
partData[[ll]]$group <- lst$group[idx]
partData[[ll]]$idx <- idx
partData[[ll]]$nrep <- ngroup / partData[[ll]]$nobs
}
fname <- paste0("part_data_rep_", cc, "_k_", npart, "_dep.rds")
#saveRDS(partData, paste0("~/dls/data/", fname))
saveRDS(partData, paste0("1000s_", fname))
}
## npart = 150
rm(list=ls())
#repData <- readRDS("~/dls/data/full_data.rds")
repData <- readRDS("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/data/full_data.rds")
set.seed(12345)
ngroup <- 5e4
nobs <- 1e6
nfixef <- 4
nranef <- 3
nresamp <- 1000
npart <- 150
partData <- list()
for (cc in 1:10) {
partData <- vector("list", npart)
names(partData) <- paste0("k", 1:npart)
lst <- repData[[cc]]
grpSplit <- split(1:nrow(lst$x), lst$group)
for (ll in 1:npart) {
grpIdx <- sample(1:length(grpSplit), nresamp, replace = TRUE)
idx <- unlist(grpSplit[grpIdx])
partData[[ll]]$nobs <- length(unique(grpIdx))
partData[[ll]]$x <- lst$x[idx, ]
partData[[ll]]$y <- lst$y[idx]
partData[[ll]]$z <- lst$z[idx, ]
partData[[ll]]$group <- lst$group[idx]
partData[[ll]]$idx <- idx
partData[[ll]]$nrep <- ngroup / partData[[ll]]$nobs
}
fname <- paste0("part_data_rep_", cc, "_k_", npart, "_dep.rds")
#saveRDS(partData, paste0("~/dls/data/", fname))
saveRDS(partData, paste0("1000s_", fname))
}
## npart = 200
rm(list=ls())
#repData <- readRDS("~/dls/data/full_data.rds")
repData <- readRDS("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/data/full_data.rds")
set.seed(12345)
ngroup <- 5e4
nobs <- 1e6
nfixef <- 4
nranef <- 3
nresamp <- 1000
npart <- 200
partData <- list()
for (cc in 1:10) {
partData <- vector("list", npart)
names(partData) <- paste0("k", 1:npart)
lst <- repData[[cc]]
grpSplit <- split(1:nrow(lst$x), lst$group)
for (ll in 1:npart) {
grpIdx <- sample(1:length(grpSplit), nresamp, replace = TRUE)
idx <- unlist(grpSplit[grpIdx])
partData[[ll]]$nobs <- length(unique(grpIdx))
partData[[ll]]$x <- lst$x[idx, ]
partData[[ll]]$y <- lst$y[idx]
partData[[ll]]$z <- lst$z[idx, ]
partData[[ll]]$group <- lst$group[idx]
partData[[ll]]$idx <- idx
partData[[ll]]$nrep <- ngroup / partData[[ll]]$nobs
}
fname <- paste0("part_data_rep_", cc, "_k_", npart, "_dep.rds")
#saveRDS(partData, paste0("~/dls/data/", fname))
saveRDS(partData, paste0("1000s_", fname))
}
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /real/data")
rm(list=ls())
repData <- readRDS("train_bwt.rds")
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/data")
repData2 <- readRDS("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/data/full_data.rds")
nrow(repData[[1]]$x)
length(unique(repData[[1]]$group))
length(unique(repData[[2]]$group))
length(unique(repData[[3]]$group))
length(unique(repData[[4]]$group))
length(unique(repData[[5]]$group))
length(unique(repData[[6]]$group))
