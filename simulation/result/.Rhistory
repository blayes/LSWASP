accur_dmat_5D <- accur_list[[9]]
accur_dmat_6D <- accur_list[[10]]
accur_Rmat_2D <- accur_list[[11]]
accur_Rmat_3D <- accur_list[[12]]
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 11 -- finalize paper/plot/plot of comparison WASP")
library(ggplot2)
library(RColorBrewer)
getPalette <-colorRampPalette(brewer.pal(6, "Set1"))
scaleFUN <- function(x) sprintf("%.2f", x)
options(tz="IA")
tikz(file = "overlap_fixed_effect.tex", width=20, height=8)
accur_beta_2D$p <- ifelse(accur_beta_2D$p=="250","2D-250", ifelse(accur_beta_2D$p=="500","2D-500","2D-1000"))
accur_beta_2D$p <- as.factor(accur_beta_2D$p)
accur_beta_2D$s <- factor(accur_beta_2D$s, levels(factor(accur_beta_2D$s))[c(2,3,4,1)])
beta_2D_dep250 <- ggplot(accur_beta_2D[accur_beta_2D$p =="2D-250",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
beta_2D_dep500 <- ggplot(accur_beta_2D[accur_beta_2D$p =="2D-500",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
# scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
#beta_2D_dep1000 <- ggplot(accur_beta_2D[accur_beta_2D$p =="2D-1000",], aes(x=s,y=column_value, fill=m)) +
#                      scale_fill_manual(values = getPalette(m))+
#                      geom_boxplot(position=position_dodge(width=1))+
#                      facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank())+
#                       scale_y_continuous(labels=scaleFUN)
# scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_3D$p <- ifelse(accur_beta_3D$p=="250","3D-250", ifelse(accur_beta_3D$p=="500","3D-500","3D-1000"))
accur_beta_3D$p <- as.factor(accur_beta_3D$p)
accur_beta_3D$s <- factor(accur_beta_3D$s, levels(factor(accur_beta_3D$s))[c(2,3,4,1)])
beta_3D_dep250 <- ggplot(accur_beta_3D[accur_beta_3D$p =="3D-250",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#   scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
beta_3D_dep500 <- ggplot(accur_beta_3D[accur_beta_3D$p =="3D-500",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
#beta_3D_dep1000 <- ggplot(accur_beta_3D[accur_beta_3D$p =="3D-1000",], aes(x=s,y=column_value, fill=m)) +
#                    scale_fill_manual(values = getPalette(m))+
#                    geom_boxplot(position=position_dodge(width=1))+
#                    facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank())+
#                     scale_y_continuous(labels=scaleFUN)
#  #                    scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_4D$p <- ifelse(accur_beta_4D$p=="250","4D-250", ifelse(accur_beta_4D$p=="500","4D-500","4D-1000"))
accur_beta_4D$p <- as.factor(accur_beta_4D$p)
accur_beta_4D$s <- factor(accur_beta_4D$s, levels(factor(accur_beta_4D$s))[c(2,3,4,1)])
beta_4D_dep250 <- ggplot(accur_beta_4D[accur_beta_4D$p =="4D-250",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                    scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
beta_4D_dep500 <- ggplot(accur_beta_4D[accur_beta_4D$p =="4D-500",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                    scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
#beta_4D_dep1000 <- ggplot(accur_beta_4D[accur_beta_4D$p =="4D-1000",], aes(x=s,y=column_value, fill=m)) +
#                  scale_fill_manual(values = getPalette(m))+
#                  geom_boxplot(position=position_dodge(width=1))+
#                  facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank())+
#                  scale_y_continuous(labels=scaleFUN)
#  #                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_5D$p <- ifelse(accur_beta_5D$p=="250","5D-250", ifelse(accur_beta_5D$p=="500","5D-500","5D-1000"))
accur_beta_5D$p <- as.factor(accur_beta_5D$p)
accur_beta_5D$s <- factor(accur_beta_5D$s, levels(factor(accur_beta_5D$s))[c(2,3,4,1)])
beta_5D_dep250 <- ggplot(accur_beta_5D[accur_beta_5D$p =="5D-250",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                    scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
beta_5D_dep500 <- ggplot(accur_beta_5D[accur_beta_5D$p =="5D-500",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15) )+
scale_y_continuous(labels=scaleFUN)
#                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
#beta_5D_dep1000 <- ggplot(accur_beta_5D[accur_beta_5D$p =="5D-1000",], aes(x=s,y=column_value, fill=m)) +
#                      scale_fill_manual(values = getPalette(m))+
#                      geom_boxplot(position=position_dodge(width=1))+
#                      facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank() )+
#                      scale_y_continuous(labels=scaleFUN)
#  #                      scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_6D$p <- ifelse(accur_beta_6D$p=="250","6D-250", ifelse(accur_beta_6D$p=="500","6D-500","6D-1000"))
accur_beta_6D$p <- as.factor(accur_beta_6D$p)
accur_beta_6D$s <- factor(accur_beta_6D$s, levels(factor(accur_beta_6D$s))[c(2,3,4,1)])
beta_6D_dep250 <- ggplot(accur_beta_6D[accur_beta_6D$p =="6D-250",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank() , strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
beta_6D_dep500 <- ggplot(accur_beta_6D[accur_beta_6D$p =="6D-500",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank() , strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
#beta_6D_dep1000 <- ggplot(accur_beta_6D[accur_beta_6D$p =="6D-1000",], aes(x=s,y=column_value, fill=m)) +
#                    scale_fill_manual(values = getPalette(m))+
#                    geom_boxplot(position=position_dodge(width=1))+
#                    facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank() )+
#                      scale_y_continuous(labels=scaleFUN)
#                    #scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
library(cowplot)
#g <-gridExtra::grid.arrange(beta_ind, dmat_ind, Rmat_ind , ncol=3, top = "Boxplot of accuracy of Cholesky matrix lmat")
beta_6D_beta <- ggplot(accur_beta_6D[accur_beta_6D$p =="6D-1000",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.title=element_blank(), text = element_text(size=15))+
scale_y_continuous(labels=scaleFUN,name = "Approximation Error") + scale_x_discrete(name = "Number of Subsets (k)")
grobs <- ggplotGrob(beta_6D_beta)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
axis_x_title <- grobs[[9]]
axis_y_title <- grobs[[10]]
plot1 <- plot_grid(beta_2D_dep250, beta_3D_dep250, beta_4D_dep250, beta_5D_dep250, beta_6D_dep250,
beta_2D_dep500, beta_3D_dep500, beta_4D_dep500, beta_5D_dep500, beta_6D_dep500,
align = "v", ncol=5)
p <- plot_grid(axis_y_title,plot1, legend, ncol = 3, rel_widths = c(.08,1, .1))
plot_grid(p, axis_x_title, nrow=2, rel_heights = c(1, .1))
dev.off()
rm(list=ls())
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /real_dls_tosanvesh/result")
# each res stores one file: {dls, XL_dls}*{ind, dep10, dep15}*{20,30,50,100}
res <- vector("list",24)
# read file into res
method <- c("dls","XL_dls")
subset <- c(20,30,50,100)
partition <- c("dep250", "dep500", "dep1000")
l <- list(m = 1:2, s = 1:4, p = 1:3)
comb <- expand.grid(l)
for(i in 1:12){
m <- as.numeric(comb[i,][1])
s <- as.numeric(comb[i,][2])
p <- as.numeric(comb[i,][3])
data_name <- paste0("real_",method[m],"_k_",subset[s],"_accuracy_",partition[p],".rds")
res[[i]] <- readRDS(data_name)[[1]]
}
# in total 12 variables
accur_para <- c(  "accur_beta_2D","accur_beta_3D","accur_beta_4D","accur_beta_5D","accur_beta_6D",
"accur_dmat_2D","accur_dmat_3D","accur_dmat_4D","accur_dmat_5D","accur_dmat_6D",
"accur_Rmat_2D","accur_Rmat_3D")
# each stores one accur_para
accur_list <- vector("list", 12)
comb$m <- ifelse(comb$m==1,"LS-WASP","DPMC")
comb$s <- ifelse(comb$s==1, "20", ifelse(comb$s==2, "30", ifelse(comb$s==3, "50", "100")))
comb$p <- ifelse(comb$p==1, "250", ifelse(comb$p==2, "500","1000"))
comb_extend <- comb[rep(seq_len(nrow(comb)), each=10),]
for(i in 1:12){
# stock up the twelve files for each var
column_value <-  unlist(lapply(res, function(x) x$accuracy_matrix[,accur_para[i]]))
column_value <- matrix(column_value, ncol=1)
accur_list[[i]] <- cbind(column_value, comb_extend)
}
accur_beta_2D <- accur_list[[1]]
accur_beta_3D <- accur_list[[2]]
accur_beta_4D <- accur_list[[3]]
accur_beta_5D <- accur_list[[4]]
accur_beta_6D <- accur_list[[5]]
accur_dmat_2D <- accur_list[[6]]
accur_dmat_3D <- accur_list[[7]]
accur_dmat_4D <- accur_list[[8]]
accur_dmat_5D <- accur_list[[9]]
accur_dmat_6D <- accur_list[[10]]
accur_Rmat_2D <- accur_list[[11]]
accur_Rmat_3D <- accur_list[[12]]
#################### Make the plots #########################
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 11 -- finalize paper/plot/plot of comparison WASP")
library(ggplot2)
library(RColorBrewer)
getPalette <-colorRampPalette(brewer.pal(6, "Set1"))
scaleFUN <- function(x) sprintf("%.2f", x)
options(tz="IA")
tikz(file = "overlap_fixed_effect.tex", width=20, height=8)
accur_beta_2D$p <- ifelse(accur_beta_2D$p=="250","2D-250", ifelse(accur_beta_2D$p=="500","2D-500","2D-1000"))
accur_beta_2D$p <- as.factor(accur_beta_2D$p)
accur_beta_2D$s <- factor(accur_beta_2D$s, levels(factor(accur_beta_2D$s))[c(2,3,4,1)])
beta_2D_dep250 <- ggplot(accur_beta_2D[accur_beta_2D$p =="2D-250",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
beta_2D_dep500 <- ggplot(accur_beta_2D[accur_beta_2D$p =="2D-500",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
# scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
#beta_2D_dep1000 <- ggplot(accur_beta_2D[accur_beta_2D$p =="2D-1000",], aes(x=s,y=column_value, fill=m)) +
#                      scale_fill_manual(values = getPalette(m))+
#                      geom_boxplot(position=position_dodge(width=1))+
#                      facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank())+
#                       scale_y_continuous(labels=scaleFUN)
# scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_3D$p <- ifelse(accur_beta_3D$p=="250","3D-250", ifelse(accur_beta_3D$p=="500","3D-500","3D-1000"))
accur_beta_3D$p <- as.factor(accur_beta_3D$p)
accur_beta_3D$s <- factor(accur_beta_3D$s, levels(factor(accur_beta_3D$s))[c(2,3,4,1)])
beta_3D_dep250 <- ggplot(accur_beta_3D[accur_beta_3D$p =="3D-250",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#   scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
beta_3D_dep500 <- ggplot(accur_beta_3D[accur_beta_3D$p =="3D-500",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
#beta_3D_dep1000 <- ggplot(accur_beta_3D[accur_beta_3D$p =="3D-1000",], aes(x=s,y=column_value, fill=m)) +
#                    scale_fill_manual(values = getPalette(m))+
#                    geom_boxplot(position=position_dodge(width=1))+
#                    facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank())+
#                     scale_y_continuous(labels=scaleFUN)
#  #                    scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_4D$p <- ifelse(accur_beta_4D$p=="250","4D-250", ifelse(accur_beta_4D$p=="500","4D-500","4D-1000"))
accur_beta_4D$p <- as.factor(accur_beta_4D$p)
accur_beta_4D$s <- factor(accur_beta_4D$s, levels(factor(accur_beta_4D$s))[c(2,3,4,1)])
beta_4D_dep250 <- ggplot(accur_beta_4D[accur_beta_4D$p =="4D-250",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                    scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
beta_4D_dep500 <- ggplot(accur_beta_4D[accur_beta_4D$p =="4D-500",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                    scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
#beta_4D_dep1000 <- ggplot(accur_beta_4D[accur_beta_4D$p =="4D-1000",], aes(x=s,y=column_value, fill=m)) +
#                  scale_fill_manual(values = getPalette(m))+
#                  geom_boxplot(position=position_dodge(width=1))+
#                  facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank())+
#                  scale_y_continuous(labels=scaleFUN)
#  #                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_5D$p <- ifelse(accur_beta_5D$p=="250","5D-250", ifelse(accur_beta_5D$p=="500","5D-500","5D-1000"))
accur_beta_5D$p <- as.factor(accur_beta_5D$p)
accur_beta_5D$s <- factor(accur_beta_5D$s, levels(factor(accur_beta_5D$s))[c(2,3,4,1)])
beta_5D_dep250 <- ggplot(accur_beta_5D[accur_beta_5D$p =="5D-250",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                    scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
beta_5D_dep500 <- ggplot(accur_beta_5D[accur_beta_5D$p =="5D-500",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15) )+
scale_y_continuous(labels=scaleFUN)
#                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
#beta_5D_dep1000 <- ggplot(accur_beta_5D[accur_beta_5D$p =="5D-1000",], aes(x=s,y=column_value, fill=m)) +
#                      scale_fill_manual(values = getPalette(m))+
#                      geom_boxplot(position=position_dodge(width=1))+
#                      facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank() )+
#                      scale_y_continuous(labels=scaleFUN)
#  #                      scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_6D$p <- ifelse(accur_beta_6D$p=="250","6D-250", ifelse(accur_beta_6D$p=="500","6D-500","6D-1000"))
accur_beta_6D$p <- as.factor(accur_beta_6D$p)
accur_beta_6D$s <- factor(accur_beta_6D$s, levels(factor(accur_beta_6D$s))[c(2,3,4,1)])
beta_6D_dep250 <- ggplot(accur_beta_6D[accur_beta_6D$p =="6D-250",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank() , strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
beta_6D_dep500 <- ggplot(accur_beta_6D[accur_beta_6D$p =="6D-500",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank() , strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
#beta_6D_dep1000 <- ggplot(accur_beta_6D[accur_beta_6D$p =="6D-1000",], aes(x=s,y=column_value, fill=m)) +
#                    scale_fill_manual(values = getPalette(m))+
#                    geom_boxplot(position=position_dodge(width=1))+
#                    facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank() )+
#                      scale_y_continuous(labels=scaleFUN)
#                    #scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
library(cowplot)
#g <-gridExtra::grid.arrange(beta_ind, dmat_ind, Rmat_ind , ncol=3, top = "Boxplot of accuracy of Cholesky matrix lmat")
beta_6D_beta <- ggplot(accur_beta_6D[accur_beta_6D$p =="6D-1000",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.title=element_blank(), text = element_text(size=15))+
scale_y_continuous(labels=scaleFUN,name = "Approximation Error") + scale_x_discrete(name = "Number of Subsets (k)")
grobs <- ggplotGrob(beta_6D_beta)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
axis_x_title <- grobs[[9]]
axis_y_title <- grobs[[10]]
plot1 <- plot_grid(beta_2D_dep250, beta_3D_dep250, beta_4D_dep250, beta_5D_dep250, beta_6D_dep250,
beta_2D_dep500, beta_3D_dep500, beta_4D_dep500, beta_5D_dep500, beta_6D_dep500,
align = "v", ncol=5)
p <- plot_grid(axis_y_title,plot1, legend, ncol = 3, rel_widths = c(.05,1, .1))
plot_grid(p, axis_x_title, nrow=2, rel_heights = c(1, .1))
dev.off()
library("tikzDevice")
library("ggplot2")
################# making plot for fixed effect, random effect covariance, correlation matrix as a whole ####
rm(list=ls())
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /real_dls_tosanvesh/result")
# each res stores one file: {dls, XL_dls}*{ind}*{20,30}
res <- vector("list",4)
# read file into res
method <- c("dls","XL_dls")
subset <- c(20,30)
partition <- c("ind")
l <- list(m = 1:2, s = 1:2, p = 1)
comb <- expand.grid(l)
for(i in 1:4){
m <- as.numeric(comb[i,][1])
s <- as.numeric(comb[i,][2])
p <- as.numeric(comb[i,][3])
data_name <- paste0("real_",method[m],"_k_",subset[s],"_accuracy_",partition[p],".rds")
res[[i]] <- readRDS(data_name)[[1]]
}
# in total 12 variables
accur_para <- c(  "accur_beta_2D","accur_beta_3D","accur_beta_4D","accur_beta_5D","accur_beta_6D",
"accur_dmat_2D","accur_dmat_3D","accur_dmat_4D","accur_dmat_5D","accur_dmat_6D",
"accur_Rmat_2D","accur_Rmat_3D")
#accur_para <- c("accur_beta", "accur_dmat", "accur_Rmat", "accur_beta_2D",
#                "accur_beta_3D","accur_beta_4D","accur_beta_5D","accur_beta_6D",
#                "accur_dmat_2D","accur_dmat_3D","accur_dmat_4D","accur_dmat_5D",
#                "accur_Rmat_2D")
# each stores one accur_para
accur_list <- vector("list", 12)
comb$m <- ifelse(comb$m==1, "LS-WASP", "DPMC")
comb$s <- ifelse(comb$s==1, "20", "30")
comb$p <- c("disjoint")
comb_extend <- comb[rep(seq_len(nrow(comb)), each=10),]
for(i in 1:12){
# stock up the twelve files for each var
column_value <-  unlist(lapply(res, function(x) x$accuracy_matrix[,accur_para[i]]))
column_value <- matrix(column_value, ncol=1)
accur_list[[i]] <- cbind(column_value, comb_extend)
}
accur_beta_2D <- accur_list[[1]]
accur_beta_3D <- accur_list[[2]]
accur_beta_4D <- accur_list[[3]]
accur_beta_5D <- accur_list[[4]]
accur_beta_6D <- accur_list[[5]]
accur_dmat_2D <- accur_list[[6]]
accur_dmat_3D <- accur_list[[7]]
accur_dmat_4D <- accur_list[[8]]
accur_dmat_5D <- accur_list[[9]]
accur_dmat_6D <- accur_list[[10]]
accur_Rmat_2D_disjoint <- accur_list[[11]]
accur_Rmat_3D_disjoint <- accur_list[[12]]
#################### Make the plots #########################
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 11 -- finalize paper/plot/plot of comparison WASP")
library(ggplot2)
library(RColorBrewer)
getPalette <-colorRampPalette(brewer.pal(6, "Set1"))
scaleFUN <- function(x) sprintf("%.2f", x)
options(tz="IA")
tikz(file = "fixed_effect_disjoint.tex", width=20, height=4)
accur_beta_2D$p <- c("2D")
accur_beta_2D$s <- factor(accur_beta_2D$s, levels(factor(accur_beta_2D$s))[c(1,2)])
beta_2D <- ggplot(accur_beta_2D, aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank())+
scale_y_continuous(labels=scaleFUN)
#scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_3D$p <- c("3D")
accur_beta_3D$s <- factor(accur_beta_3D$s, levels(factor(accur_beta_3D$s))[c(1,2)])
beta_3D <- ggplot(accur_beta_3D, aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#   scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_4D$p <- c("4D")
accur_beta_4D$s <- factor(accur_beta_4D$s, levels(factor(accur_beta_4D$s))[c(1,2)])
beta_4D <- ggplot(accur_beta_4D, aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                    scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_5D$p <- c("5D")
accur_beta_5D$s <- factor(accur_beta_5D$s, levels(factor(accur_beta_5D$s))[c(1,2)])
beta_5D <- ggplot(accur_beta_5D, aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15))+
scale_y_continuous(labels=scaleFUN)
#                    scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
accur_beta_6D$p <- c("6D")
accur_beta_6D$s <- factor(accur_beta_6D$s, levels(factor(accur_beta_6D$s))[c(1,2)])
beta_6D <- ggplot(accur_beta_6D, aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15) )+
scale_y_continuous(labels=scaleFUN)
#                  scale_x_discrete(name = "subset number") + scale_y_continuous(name = "accuracy")
library(cowplot)
#g <-gridExtra::grid.arrange(beta_ind, dmat_ind, Rmat_ind , ncol=3, top = "Boxplot of accuracy of Cholesky matrix lmat")
beta_6D_beta <- ggplot(accur_beta_6D, aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.title=element_blank(), text = element_text(size=15))+
scale_y_continuous(labels=scaleFUN,name = "Approximation Error") + scale_x_discrete(name = "Number of Subsets (k)")
grobs <- ggplotGrob(beta_6D_beta)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
axis_x_title <- grobs[[9]]
axis_y_title <- grobs[[10]]
plot1 <- plot_grid(beta_2D,beta_3D,beta_4D,beta_5D,beta_6D,
align = "v", ncol=5)
p <- plot_grid(axis_y_title,plot1, legend, ncol = 3, rel_widths = c(.05,1, .1))
plot_grid(p, axis_x_title, nrow=2, rel_heights = c(1, .1))
dev.off()
rm(list=ls())
# utilize the function in ml_estimation.R
library(ggplot2)
i = 1
# get the lme4 estimation
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 11 -- finalize paper/data")
data_full <- readRDS("train_bwt.rds")
#result <- estimateMLE(data_full[[i]]$y, data_full[[i]]$x, data_full[[i]]$z, data_full[[i]]$group, family = "gaussian")
# get the wasp and dmpc estimation
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 11 -- finalize paper/data/comb")
### wasp disjoint
wasp_disjoint <- vector("list",2)
k = 1
for (ii in c(20,30)){
name <- paste0("real_dls_samps_rep_",i,"_k_",ii,".rds")
wasp_disjoint[[k]] <- readRDS(name)
k = k+1
}
ggplot(1:10)+boxplot()
rm(list=ls())
library("tikzDevice")
library("ggplot2")
setwd("/Users/AaronXu/Research_Project/Mixed effect Model/Meeting 10 - real data /simulation/result")
# each res stores one file: {dls, XL_dls}*{ind, dep250, dep500, dep1000}*{20,50,100,150,200}
res <- vector("list",40)
# read file into res
method <- c("dls","XL_dls")
subset <- c(20,50,100,150,200)
partition <- c("ind", "dep250", "dep500", "dep1000")
l <- list(m = 1:2, s = 1:5, p = 1:4)
comb <- expand.grid(l)
for(i in 1:40){
m <- as.numeric(comb[i,][1])
s <- as.numeric(comb[i,][2])
p <- as.numeric(comb[i,][3])
data_name <- paste0("sim_",method[m],"_k_",subset[s],"_accuracy_",partition[p],".rds")
res[[i]] <- readRDS(data_name)[[1]]
}
# in total 12 variables
accur_para <- c(  "accur_beta_2D","accur_beta_3D","accur_beta_4D",
"accur_dmat_2D","accur_dmat_3D","accur_dmat_4D","accur_dmat_5D","accur_dmat_6D",
"accur_Rmat_2D","accur_Rmat_3D")
# each stores one accur_para
accur_list <- vector("list", 10)
comb$m <- ifelse(comb$m==1, "LS-WASP", "DPMC")
comb$s <- ifelse(comb$s==1, "20", ifelse(comb$s==2, "50", ifelse(comb$s==3, "100",  ifelse(comb$s==4, "150", "200"))))
comb$p <- ifelse(comb$p==1, "ind", ifelse(comb$p==2, "dep250", ifelse(comb$p==3, "dep500","dep1000")))
comb_extend <- comb[rep(seq_len(nrow(comb)), each=10),]
for(i in 1:10){
# stock up the twelve files for each var
column_value <-  unlist(lapply(res, function(x) x$accuracy_matrix[,accur_para[i]]))
column_value <- matrix(column_value, ncol=1)
accur_list[[i]] <- cbind(column_value, comb_extend)
}
accur_beta_2D <- accur_list[[1]]
accur_beta_3D <- accur_list[[2]]
accur_beta_4D <- accur_list[[3]]
accur_dmat_2D <- accur_list[[4]]
accur_dmat_3D <- accur_list[[5]]
accur_dmat_4D <- accur_list[[6]]
accur_dmat_5D <- accur_list[[7]]
accur_dmat_6D <- accur_list[[8]]
accur_Rmat_2D_disjoint <- accur_list[[9]]
accur_Rmat_3D_disjoint <- accur_list[[10]]
accur_Rmat_2D <- accur_list[[9]]
accur_Rmat_3D <- accur_list[[10]]
accur_beta_2D$p <- ifelse(accur_beta_2D$p=="ind","2D-disjoint", ifelse(accur_beta_2D$p=="dep250","2D-250", ifelse(accur_beta_2D$p=="dep500","2D-500","2D-1000")))
accur_beta_2D$p <- as.factor(accur_beta_2D$p)
accur_beta_2D$s <- factor(accur_beta_2D$s, levels(factor(accur_beta_2D$s))[c(3,5,1,2,4)])
ggplot(accur_beta_2D[accur_beta_2D$p =="2D-disjoint",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15) )+
scale_y_continuous(labels=scaleFUN)
scaleFUN <- function(x) sprintf("%.3f", x)
ggplot(accur_beta_2D[accur_beta_2D$p =="2D-disjoint",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15) )+
scale_y_continuous(labels=scaleFUN)
library(RColorBrewer)
getPalette <-colorRampPalette(brewer.pal(6, "Set1"))
library(ggplot2)
ggplot(accur_beta_2D[accur_beta_2D$p =="2D-disjoint",], aes(x=s,y=column_value, fill=m)) +
scale_fill_manual(values = getPalette(m))+
geom_boxplot(position=position_dodge(width=1))+
facet_wrap(~p) +theme_bw() + theme(legend.position='none', axis.title.y=element_blank(), axis.title.x=element_blank(), strip.text.x = element_text(size=15) )+
scale_y_continuous(labels=scaleFUN)
